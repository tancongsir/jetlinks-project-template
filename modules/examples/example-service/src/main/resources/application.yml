server:
  port: 8500
  max-http-header-size: 200KB
  error:
    include-message: always
spring:
  profiles:
    active: dev,local
  application:
    name: example-service
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
      zone: ${local.ip}
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
    default-property-inclusion: non_null
  redis:
    host: 127.0.0.1
    port: 6379
    lettuce:
      pool:
        max-active: 1024
    timeout: 20s
#    password: ""
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/jetlinks
    username: postgres
    password: jetlinks
    pool:
      max-size: 32
  codec:
    max-in-memory-size: 50MB
  reactor:
    debug-agent:
      enabled: true # 开启调试代理,在打印异常时将会生成调用踪栈信息
  elasticsearch:
    uris: localhost:9200
    socket-timeout: 10s
    connection-timeout: 15s
    webclient:
      max-in-memory-size: 100MB
easyorm:
  default-schema: public # 数据库默认的schema
  dialect: postgres #数据库方言
elasticsearch:
  index:
    default-strategy: time-by-month #默认es的索引按月进行分表
    settings:
      number-of-shards: 1 # es 分片数量
      number-of-replicas: 0 # 副本数量
hsweb:
  dict:
    enum-packages: org.jetlinks
  webflux:
    response-wrapper:
      enabled: true #开启响应包装器(将返回值包装为ResponseMessage)
      excludes: # 这下包下的接口不包装
        - org.springdoc
  cache:
    type: redis
    redis:
      local-cache-type: guava
jetlinks:
  server-id: ${spring.application.name}:${server.port} #集群节点ID,不同集群节点请设置不同的ID
  cluster:
    id: ${jetlinks.server-id}
    name: ${spring.application.name}
    port: 1${server.port} # 集群通信通信本地端口
    external-host: 127.0.0.1  #集群节点通信对外暴露的host
    external-port: ${jetlinks.cluster.port} #集群节点通信对外暴露的端口
    rpc-port: 2${server.port} # 集群节点本地RPC端口
    rpc-external-host: ${jetlinks.cluster.external-host}  #集群节点RPC对外暴露host
    rpc-external-port: 2${server.port} #集群节点RPC对外暴露端口
    #    rpc-token: jetlinks # 集群节点RPC通信token,生产环境请修改
    seeds:  #集群种子节点,集群时,配置为api网关节点的 external-host:external-port
        - 127.0.0.1:18800
  microservice:
    discovery:
      enabled: true # 开启平台内置的服务发现,需要设置jetlinks.cluster.seeds为网关服务以加入集群.
    token:
      jwt:
        #用于解码jwt的公钥
        decode-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIgLDKvGlDEedlBYEBdXUXZ3cq3hBCqYzqK9bsRV2n4htVQQZKM7vuKksxh3oGtGCEK8jYzcKe+xZrh7Dw5w5/ECAwEAAQ==
  logging:
    system:
      context:
        server: ${spring.application.name}
logging:
  level:
    org.jetlinks: debug
    rule.engine: debug
    org.hswebframework: debug
    org.springframework.transaction: debug
    org.springframework.data.r2dbc.connectionfactory: debug
    io.micrometer: warn
    org.hswebframework.expands: error
    system: warn
    org.jetlinks.rule.engine: debug
    org.jetlinks.gateway: debug
    org.springframework: warn
    org.apache.kafka: warn
    org.jetlinks.pro.device.message.writer: debug
    org.jetlinks.supports: warn
  #    org.elasticsearch: error
#  config: classpath:logback-spring.xml
trace:
  enabled: true
  jaeger:
    enabled: false
    endpoint: "http://127.0.0.1:14250"